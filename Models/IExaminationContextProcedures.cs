// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Exam_System.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace Exam_System.Models
{
    public partial interface IExaminationContextProcedures
    {
        Task<int> AddAdminAsync(string adminFName, string adminLName, string email, string password, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddAnswerAsync(int? AnswerNumber, string AnswerBody, bool? IsCorrect, int? QuestionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddCourseAsync(string CourseName, int? passdegree, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddCourseTrackAsync(int? trackId, int? courseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddInstructorAsync(string insFName, string insLName, decimal? insSalary, string insEmail, string insPassword, string insGender, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddInstructorCourseAsync(int? InstructorId, int? CourseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddQuestionAsync(string QuestionType, string QuestionTitle, int? QuestionDegree, int? CourseID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddQuestionExamAsync(int? ExamId, int? QuestionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddStudentAsync(string studentFName, string studentLName, string email, string gender, string password, int? trackId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddStudentAnswerAsync(int? StudentId, int? ExamId, int? QuestionId, int? AnswerChooseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddStudentCourseAsync(int? StudentId, int? CourseId, int? Grade, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AddTopicAsync(string topicName, int? courseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteAdminAsync(int? adminId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteAnswerByIDAsync(int? AnswerID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteCourseAsync(int? CourseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteExamAsync(int? ExamId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteInstructorAsync(int? instructorId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteInstructorCourseAsync(int? InstructorId, int? CourseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteITIStaffAsync(int? ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteQuestionByIDAsync(int? QuestionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteQuestionExamAsync(int? ExamId, int? QuestionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteStudentAsync(int? studentId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteStudentAnswerAsync(int? StudentId, int? ExamId, int? QuestionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteStudentCourseAsync(int? StudentId, int? CourseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteTopicAsync(int? topicId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteTrackAsync(int? TrackId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAdminDataResult>> GetAdminDataAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllExamsQuestionsResult>> GetAllExamsQuestionsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllInstructorsCoursesResult>> GetAllInstructorsCoursesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetBranchInstructorsResult>> GetBranchInstructorsAsync(int? BranchId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetCourseDataResult>> GetCourseDataAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetCourseInstructorsResult>> GetCourseInstructorsAsync(int? CourseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetCourseTopicResult>> GetCourseTopicAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetCourseTrackDataResult>> GetCourseTrackDataAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetExamQuestionsResult>> GetExamQuestionsAsync(int? ExamId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetInstructorBranchesResult>> GetInstructorBranchesAsync(int? InstructorId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetInstructorCoursesResult>> GetInstructorCoursesAsync(int? InstructorId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetInstructorDataResult>> GetInstructorDataAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetStudentDataResult>> GetStudentDataAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetWorkOnResult>> GetWorkOnAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertExamAsync(DateOnly? ExamDate, TimeOnly? StartTime, TimeOnly? EndTime, int? CourseId, int? TrackId, int? InstructorId, int? FullMark, int? NumTrueFalseQuestions, int? NumMCQuestions, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertITIStaffAsync(string Name, string Email, string Password, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<InsertTrackResult>> InsertTrackAsync(string TrackName, int? SupervisorId, int? Capacity, int? BranchId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectAllAnswersResult>> SelectAllAnswersAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectAllAnswersWithQuestionsResult>> SelectAllAnswersWithQuestionsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectAllExamsResult>> SelectAllExamsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectAllExamsWithDetailsResult>> SelectAllExamsWithDetailsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectAllQuestionsResult>> SelectAllQuestionsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectAllQuestionsWithCoursesResult>> SelectAllQuestionsWithCoursesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectAllStudentAnswersResult>> SelectAllStudentAnswersAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectAllStudentCourseResult>> SelectAllStudentCourseAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectAllTracksResult>> SelectAllTracksAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectAllTracksWithBranchResult>> SelectAllTracksWithBranchAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectAnswerByIDResult>> SelectAnswerByIDAsync(int? AnswerID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectAnswerByIDWithQuestionResult>> SelectAnswerByIDWithQuestionAsync(int? AnswerID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectAnswersByQuestionIDResult>> SelectAnswersByQuestionIDAsync(int? QuestionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectExamByIdResult>> SelectExamByIdAsync(int? ExamId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectExamByIdWithDetailsResult>> SelectExamByIdWithDetailsAsync(int? ExamId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectITIStaffResult>> SelectITIStaffAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectQuestionByIDResult>> SelectQuestionByIDAsync(int? QuestionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectQuestionByIDWithCourseResult>> SelectQuestionByIDWithCourseAsync(int? QuestionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectStudentAnswerByIDResult>> SelectStudentAnswerByIDAsync(int? StudentId, int? ExamId, int? QuestionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectStudentCourseByIDResult>> SelectStudentCourseByIDAsync(int? StudentId, int? CourseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectTrackByIdResult>> SelectTrackByIdAsync(int? TrackId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectTrackByIdWithBranchResult>> SelectTrackByIdWithBranchAsync(int? TrackId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateAdminPasswordAsync(int? adminId, string password, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateAnswerByIDAsync(int? AnswerID, int? AnswerNumber, string AnswerBody, bool? IsCorrect, int? QuestionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateCourseAsync(int? CourseId, string CourseName, int? PassDegree, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateCourseInstructorAsync(int? CourseId, int? OldInstructorId, int? NewInstructorId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateExamAsync(int? ExamId, DateOnly? ExamDate, TimeOnly? StartTime, TimeOnly? EndTime, int? CourseId, int? TrackId, int? InstructorId, int? FullMark, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateExamQuestionAsync(int? ExamId, int? OldQuestionId, int? NewQuestionId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateInstructorAsync(int? instructorId, string insFName, string insLName, decimal? insSalary, string insEmail, string insPassword, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateInstructorCourseAsync(int? InstructorId, int? OldCourseId, int? NewCourseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateITIStaffAsync(int? ID, string Name, string Email, string Password, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateQuestionByIDAsync(int? QuestionID, string QuestionType, string QuestionTitle, int? QuestionDegree, int? CourseID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateStudentAsync(int? studentId, string stdFName, string stdLName, string stdEmail, string stdGender, string stdPassword, int? stdTrack, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateStudentAnswerAsync(int? StudentId, int? ExamId, int? QuestionId, int? NewAnswerChooseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateStudentCourseAsync(int? StudentId, int? CourseId, int? NewGrade, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateTopicAsync(int? topicId, string topicName, int? courseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UpdateTrackResult>> UpdateTrackAsync(int? TrackId, string TrackName, int? SupervisorId, int? Capacity, int? BranchId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
