@using System.Timers;
@using System.Globalization
@model Exam
@{
    Layout = null;
    int counter = 1;
    var duration = Model.Duration;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css"/>
    <link rel="stylesheet" href="~/css/exam.css" />

    <script src="https://kit.fontawesome.com/d3bc0f0f7a.js" crossorigin="anonymous"></script>

</head>
<body onload="preventBack()">
    <section class="text-center container mt-5 mb-5  m-auto ">

       

        @* <p><span class="text-success" id="">@ViewBag.duration</span></p> *@
        
        <div class="nameCourse align-items-center d-flex justify-content-between ">
            <h2> Student Name: <span class="text-success"> @ViewBag.StudentName</span></h2>
            <h2>Exam Name: <span class="text-success"> @Model.Course.CourseName </span></h2>
        </div>
        <div class="dateTimer d-flex justify-content-between">
            <h3>Exam Date: <span class="text-success"> @Model.ExamDate </span></h3>

            <div class="d-flex align-items-center">
                <h3>Timer:</h3>
                <div id="timer"></div>
            </div>

            
      
        </div>
        

     
    </section>
    <hr/>
    <section class="container m-auto">

    <form method="post" class="text-center">
        <input type="hidden" name="ExamId" value="@Model.ExamId" />
        <div  class="mt-5 mb-5  m-auto ">
            @foreach (var question in Model.Questions)
            {
                    <div class="mb-3  question" style="text-align:left;">
                        <h5><span>Q @counter: </span> @question.QuestionTitle</h5>
                        <input type="hidden" name="StudentAnswers[@question.QuestionId].QuestionId" value="@question.QuestionId" />
                        @foreach (var ans in question.Answers)
                        {
                            <p>
                                <input type="radio" name="StudentAnswers[@question.QuestionId].AnswerChooseId" value="@ans.AnswerId" />
                                @ans.AnswerBody
                            </p>
                        }
                    </div>
                    { counter++;}

                }
        </div>
            <input onclick="return confirm('Are you sure you want to end the exam and submit your answers?');" data-bs-toggle="modal" data-bs-target="#exampleModal" id="modalSubmit" type="submit" value="Submit" class="btn-custom text-center mb-3" asp-route-id="@ViewBag.StdID" />
    </form>
        <!-- Button trigger modal
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
            Launch demo modal
		</button> -->

			<!--<input onclick="return confirm('Are you sure you want to end the exam and submit your answers?');" data-bs-toggle="modal" data-bs-target="#exampleModal" id="modalSubmit" type="submit" value="Submit" class="btn btn-success text-center mb-3" asp-route-id="@ViewBag.StdID" />-->

       
        <!-- Modal -->
        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div asp-validation-summary="All" class="alert alert-danger list-unstyled"></div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
  



    <script>
        var interval; // Variable to store the interval ID

        // Function to start the timer
        function startTimer(duration) {
            var timer = duration;
            interval = setInterval(function () {
                var hours = Math.floor(timer / 3600);
                var minutes = Math.floor((timer % 3600) / 60);
                var seconds = timer % 60;

                // Format the timer display
                var timerDisplay = '';
                if (hours > 0) {
                    timerDisplay += hours + ':';
                }
                if (minutes < 10 && hours > 0) {
                    timerDisplay += '0';
                }
                timerDisplay += minutes + ':' + (seconds < 10 ? '0' : '') + seconds;

                document.getElementById('timer').innerText = timerDisplay;

                if (--timer < 0) {
                    clearInterval(interval);
               
                    window.location.href = '/Exam/EndExam'; 
                }
            }, 1000); 
        }

  
        function durationToSeconds(duration) {
            var parts = duration.split(':');
            if (parts.length == 3) {
                return parseInt(parts[0]) * 3600 + parseInt(parts[1]) * 60 + parseInt(parts[2]) - 1; 
            } else if (parts.length == 2) {
                return parseInt(parts[0]) * 60 + parseInt(parts[1]) - 1; 
            }
            return parseInt(duration) - 1;
        }

        document.addEventListener('DOMContentLoaded', function () {
            var duration = '@ViewBag.duration'; 
            var totalSeconds = durationToSeconds(duration);
            startTimer(totalSeconds);
        });

        function preventBack() { window.history.forward(); }
        setTimeout("preventBack()", 0);
        window.onunload = function () { null };

    </script>


</body>
</html>
